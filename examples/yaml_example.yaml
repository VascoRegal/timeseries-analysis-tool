global:
  timeInterval:
    begin: "2015-01-01 00:00:00"
    end: "2015-02-01 00:00:00"
  plot: true
  connectString: "pool_max_conns=10 pool_min_conns=10 pool_max_conn_lifetime=600s user=dbuser password=userpassword host=127.0.0.1 port=5432 dbname=test sslmode=disable"
timeseries:
   ts_a:
     query: "select installation, meter_id, ts, energy_apparent, energy_reactive from energy where ts >= ${begin} and ts < ${end} order by installation, meter_id, ts"
     # using this query we have #installation x #meter_id x 2 (energy_apparent and energy_reactive) distinct time series
     context: [installation, meter_id]                # this are context attributes
     indicators: [energy_apparent, energy_reactive]   # this are indicators (the time series values)
     timestamp: ts                                    # this is the timestamp attribute name 
     plot: true                                       # generate or not a plot of the time series 
     separatePlots: true                              # generate a distinct plot for each time series or one plot with all 
     valuesIntervals:
        default: [[0.0, 1.0], [1.0, 2.0], [3.0, 4.0]]
        energy_reactive:
            from: 0.0
            to: 4.0
            interval: 1.0
     timeIntervalsUnit: day
     timeIntervalsNullhandling: absent # null is treated as non existent
     timeIntervals: # create an histogram with the distance of each sample to the previous sample in time, and below the lower and above the higher
        default: [[0.0, 1.0], [1.0, 2.0], [3.0, 4.0]] # number of smples that are distant from previous 0.0 to 1.0 seconds or 1.0 to 2.0 seconds ....
        energy_reactive: 
            from: 0.0
            to: 4.0
            interval: 1.0
     metrics: [mean, variance, median, max, min] # generate this mÃ©trics for all the time series
     test: [stationarity, periodicity]      # tels if the time series is stationary in the interval increase or decrease, or is periodic anf if true the period ....
     causality: [[energy_apparent, energy_reactive]] # tels if the 2 indicators are correlated
   ts_b:
     ...
